name: Release
on:
  push:
    tags:
      - 'v*'
env:
  OPENRCT2_BUILD_SERVER: GitHub
  OPENRCT2_ORG_TOKEN: ${{ secrets.OPENRCT2_ORG_TOKEN }}
  BACKTRACE_IO_TOKEN: ${{ secrets.BACKTRACE_IO_TOKEN }}
  OPENRCT2_VERSION: 0.2.6
jobs:
  lint-commit:
    name: Lint Commit Message
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v1
        with:
          configFile: .commitlint.json
  check-code-formatting:
    name: Check code formatting
    runs-on: ubuntu-latest
    container:
      image: openrct2/openrct2-build:0.2.4-format
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run clang-format
        run: scripts/check-code-formatting
  macos:
    name: macOS
    runs-on: macos-latest
    needs: [lint-commit, check-code-formatting]
    if: needs.lint-commit.result == 'success' && needs.check-code-formatting.result == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build OpenRCT2
        run: |
          . scripts/setenv
          xcodebuild
          mkdir -p artifacts
          mv build/Release/OpenRCT2.app artifacts
          echo -e "\033[0;36mCompressing OpenRCT2.app...\033[0m"
          cd artifacts
          zip -rq openrct2-macos.zip OpenRCT2.app
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v2-preview
        with:
          name: "OpenRCT2-macOS"
          path: artifacts/openrct2-macos.zip
      - name: Upload artifacts (openrct2.org)
        run: |
          . scripts/setenv
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
              upload-build artifacts/openrct2-macos.zip macos $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
          else
              echo 'Not going to push build'
          fi
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: macos
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download CI artifacts
        uses: actions/download-artifact@v2
        with:
          path: ~/ci_artifacts
      - name: Prepare assets for release
        id: prepare_assets
        shell: bash
        run: |
          . script/setenv -q
          unzip ~/ci_artifacts/* -d ~/release_assets
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag-name: ${{ github.ref }}
          release-name: Release ${{ github.ref }}
          body_path: distribution/changelog.txt
          draft: true
          prerelease: false
      - name: Upload release asset (macOS)
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ~/release_assets/openrct2-macos.zip
          asset_name: openrct2-macos.zip
          asset_content_type: application/zip
