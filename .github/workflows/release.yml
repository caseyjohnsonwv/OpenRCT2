name: Release
on:
  push:
    tags:
      - 'v*'
env:
  OPENRCT2_BUILD_SERVER: GitHub
  OPENRCT2_ORG_TOKEN: ${{ secrets.OPENRCT2_ORG_TOKEN }}
  BACKTRACE_IO_TOKEN: ${{ secrets.BACKTRACE_IO_TOKEN }}
  OPENRCT2_VERSION: 0.2.6
jobs:
  lint-commit:
    name: Lint Commit Message
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v1
        with:
          configFile: .commitlint.json
  check-code-formatting:
    name: Check code formatting
    runs-on: ubuntu-latest
    container:
      image: openrct2/openrct2-build:0.2.4-format
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run clang-format
        run: scripts/check-code-formatting
  windows:
    name: Windows
    runs-on: windows-latest
    needs: [lint-commit, check-code-formatting]
    if: needs.lint-commit.result == 'success' && needs.check-code-formatting.result == 'success'
    strategy:
      fail-fast: false
      matrix:
        platform: [win32, x64]
    env:
      CONFIGURATION: Release
      PLATFORM: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build OpenRCT2
        shell: bash
        run: . scripts/setenv && build
      - name: Build artifacts
        shell: bash
        run: |
          . scripts/setenv -q
          build-portable
          build-symbols
          build-installer -i
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v2-preview
        with:
          name: "OpenRCT2-Windows-${{ matrix.platform }}"
          path: artifacts/*
      - name: Run Tests
        shell: bash
        run: . scripts/setenv -q && run-tests
      - name: Upload artifacts (openrct2.org)
        shell: bash
        run: |
          . scripts/setenv -q
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
              upload-build artifacts/openrct2-portable-*.zip "windows-portable-$PLATFORM" $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
              upload-build artifacts/openrct2-installer-*.exe "windows-installer-$PLATFORM" $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
              upload-build artifacts/openrct2-symbols-*.zip "windows-symbols-$PLATFORM" $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
              upload-backtrace-symbols artifacts/openrct2-symbols-*.zip
          else
              echo 'Not going to push build'
          fi
  macos:
    name: macOS
    runs-on: macos-latest
    needs: [lint-commit, check-code-formatting]
    if: needs.lint-commit.result == 'success' && needs.check-code-formatting.result == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build OpenRCT2
        run: |
          . scripts/setenv
          xcodebuild
          mkdir -p artifacts
          mv build/Release/OpenRCT2.app artifacts
          echo -e "\033[0;36mCompressing OpenRCT2.app...\033[0m"
          cd artifacts
          zip -rq openrct2-macos.zip OpenRCT2.app
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v2-preview
        with:
          name: "OpenRCT2-macOS"
          path: artifacts/openrct2-macos.zip
      - name: Upload artifacts (openrct2.org)
        run: |
          . scripts/setenv
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
              upload-build artifacts/openrct2-macos.zip macos $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
          else
              echo 'Not going to push build'
          fi
  linux-portable:
    name: Linux (x64, portable)
    runs-on: ubuntu-latest
    needs: [lint-commit, check-code-formatting]
    if: needs.lint-commit.result == 'success' && needs.check-code-formatting.result == 'success'
    container:
      image: openrct2/openrct2-build:0.2.4-bionic
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Get pre-reqs
        shell: bash
        run: . scripts/setenv && get-discord-rpc
      - name: Build OpenRCT2
        shell: bash
        run: . scripts/setenv -q && build -DWITH_TESTS=on -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SHARED_LIBS=ON -DPORTABLE=ON -DCMAKE_CXX_FLAGS="-g -gz"
      - name: Build artifacts
        shell: bash
        run: . scripts/setenv -q && build-portable artifacts/OpenRCT2-Linux-x86_64.tar.gz bin/install/usr
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v1
        with:
          name: "OpenRCT2-Linux-x86_64"
          path: artifacts
      - name: Run Tests
        shell: bash
        run: . scripts/setenv -q && run-tests
      - name: Upload artifacts (openrct2.org)
        shell: bash
        run: |
          . scripts/setenv -q
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
              upload-build artifacts/OpenRCT2-Linux-x86_64.tar.gz linux-x86_64 $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
          else
              echo 'Not going to push build'
          fi
  linux-portable-32:
    name: Linux (i686, portable)
    runs-on: ubuntu-latest
    needs: [lint-commit, check-code-formatting]
    if: needs.lint-commit.result == 'success' && needs.check-code-formatting.result == 'success'
    container:
      image: openrct2/openrct2-build:0.2.4-bionic32
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Get pre-reqs
        shell: bash
        run: . scripts/setenv && get-discord-rpc
      - name: Build OpenRCT2
        shell: bash
        env:
          TESTPAINT: true
        run: . scripts/setenv -q && build -DWITH_TESTS=on -DCMAKE_BUILD_TYPE=MinSizeRel -DBUILD_SHARED_LIBS=ON -DPORTABLE=ON -DFORCE32=ON -DENABLE_SCRIPTING=OFF -DCMAKE_CXX_FLAGS="-m32 -gz"
      - name: Build artifacts
        shell: bash
        run: . scripts/setenv -q && build-portable artifacts/OpenRCT2-Linux-i686.tar.gz bin/install/usr
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v1
        with:
          name: "OpenRCT2-Linux-i686"
          path: artifacts
      - name: Run Tests
        shell: bash
        run: . scripts/setenv -q && run-tests
      - name: Run testpaint
        shell: bash
        run: . scripts/setenv -q && run-testpaint
      - name: Upload artifacts (openrct2.org)
        shell: bash
        run: |
          . scripts/setenv -q
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
              upload-build artifacts/OpenRCT2-Linux-i686.tar.gz linux-i686 $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
          else
              echo 'Not going to push build'
          fi
  linux-appimage:
    name: Linux (x64, AppImage)
    runs-on: ubuntu-latest
    needs: [lint-commit, check-code-formatting]
    if: needs.lint-commit.result == 'success' && needs.check-code-formatting.result == 'success'
    container:
      image: openrct2/openrct2-build:0.2.4-bionic
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Get pre-reqs
        shell: bash
        run: . scripts/setenv -q && get-discord-rpc
      - name: Build OpenRCT2
        shell: bash
        run: . scripts/setenv -q && build -DCMAKE_BUILD_TYPE=Release -DAPPIMAGE=ON
      - name: Build AppImage
        shell: bash
        run: . scripts/setenv -q && build-appimage
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v1
        with:
          name: OpenRCT2-AppImage
          path: artifacts
  android:
    name: Android
    runs-on: ubuntu-latest
    needs: [lint-commit, check-code-formatting]
    if: needs.lint-commit.result == 'success' && needs.check-code-formatting.result == 'success'
    container:
      image: openrct2/openrct2-build:0.2.4-android
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build OpenRCT2
        shell: bash
        run: |
          . scripts/setenv
          pushd src/openrct2-android
            ./gradlew app:assemblePR
          popd
          mkdir -p artifacts
          mv src/openrct2-android/app/build/outputs/apk/arm/pr/app-arm-pr.apk artifacts/openrct2-arm.apk
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v1
        with:
          name: "OpenRCT2-Android"
          path: artifacts
      - name: Upload artifacts (openrct2.org)
        shell: bash
        run: |
          . scripts/setenv -q
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
              upload-build artifacts/openrct2-arm.apk android-arm $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
          else
              echo 'Not going to push build'
          fi
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    needs: [windows, macos, linux-portable, linux-portable-32, linux-appimage, android]
#    if: needs.*.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download CI artifacts
        uses: actions/download-artifact@v2
        with:
          path: ci_artifacts
      - name: Prepare artifacts for release
        shell: bash
        run: |
          mkdir release_assets
          for ARTIFACT in ci_artifacts:
          do
            unzip "ci_artifacts/$ARTIFACT" -d release_assets
          done
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag-name: ${{ github.ref }}
          release-name: Release ${{ github.ref }}
          body_path: distribution/changelog.txt
          draft: true
          prerelease: false
#      - name: Upload release assets
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: release_assets/*
